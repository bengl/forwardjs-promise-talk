From Tom:

like the performance, well, it can only be worse than plain callbacks
https://github.com/icholy/ttygif

- Is the first code example a ES6 Promise? or A+?
- Can then then catch be any order? then catch then?
- Telnet instructions on first slide, should buy a few minutes while you let people connect
- "Where do promises come from?" slide, show a stork ascii!
- instead of myFunc and doSomethingAsync, use a concret example like getUser setUser
- Promise.all() done in parallel?

---------

From Dan:

- ASCII image for "I Promise to be ...", actually 2 slides -- words only, then words + image
- add a "// bluebird" comment line above bluebird-only features
- "getSomethingAsync()" -> "promiseToBeAsync()"
- do you want to mention that you can #then after #catch ?
- "what about backward compatabilty" -- same ASCII image as earlier "Backward" slide
- #nodeify always returns a Promise -- be careful, or it may lead to double invocation
- "return promisingHook" in your #then-ish example
- "first one wins" -- come up with a more 'authoratative' way to talk about the state machine
- "Callback Hell Avoidance" -- ASCII image
- "obj.promiseToDoSomething1()"
- "More Edge Cases" -- ASCII image
- `{spread: true}` is a "// bluebird" thing
- "Stack Traces" -- ASCII image
- "Is All Of This Worth It?" -- ASCII image
- gloss over benchmarks -- @petkaantonov is VERY concerned about performance
- "The End" -- ASCII image
